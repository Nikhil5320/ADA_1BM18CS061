#include<iostream>
#include <bits/stdc++.h>
using namespace std;
int minkey(int key[],bool mstset[],int n)
{
    int m=99999,m_index;
    for(int i=0;i<n;i++)
    {
        if(mstset[i]==false && key[i]<m)
        {
            m=key[i];
            m_index=i;
        }
    }
    return m_index;
}

void print_mst(int parent[],int a[][20],int n)
{
    cout<<"edge\tweight";
    for(int i=1;i<n;i++)
    {
        cout<<parent[i]<<" - "<<i<<"\t"<<a[i,parent[i]]<<"\n";
    }
}
void primMST(int a[][20],int n)
{
    int key[n],parent[n];
    bool mstset[n];
    for(int i=0;i<n;i++)
    {
        key[i]=99999;
        mstset[i]=false;
    }
    key[0]=0;
    parent[0]=-1;
    for(int i=0;i<n;i++)
    {
        int u=minkey(key,mstset,n);
        mstset[n]=true;
        for(int j=0;j<n;j++)
        {
            if(a[u,j] && mstset[j]==false && a[u,j]<key[j])
            {
                parent[j]=u;
                key[j]=a[u,j];
                
            }
        }
    }
    print_mst(parent,a,n);
}
int main()
{
	int n,a[20][20];
	cout<<"Enter the no. of vertices"<<endl;
	cin>>n;
	
	cout<<"Enter the weighted matrix ( enter 99999 for infinity)"<<endl;
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			cin>>a[i][j];
			
		}
	}
	primMST(a,n);
}
