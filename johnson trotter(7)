#include<iostream>
using namespace std;

int pos_of_mobile(int a[],int n,int m)
{
	for(int i=1;i<=n;i++)
	{
		if(a[i]==m)
			return i;
	}
}

int find_mobile(int a[],int dir[],int n)
{
    int m=0;
    for(int i=1;i<=n;i++)
    {
      if(i!=n && dir[a[i]]==1 && a[i+1]<a[i])
      {
          if(a[i]>m)
            m=a[i];
      }
      if(i!=1 && dir[a[i]]==0 && a[i-1]<a[i])
      {
          if(a[i]>m)
            m=a[i];
      }
    }
    return m;
}

int permut(int a[],int dir[],int n)
{
    int m=find_mobile(a,dir,n);
    int pos=pos_of_mobile(a,n,m);
    if(dir[m]==0 && a[pos-1]<m)
      swap(a[pos],a[pos-1]);
    else
      swap(a[pos],a[pos+1]);
    for(int i=1;i<=n;i++)
      cout<<a[i]<<"\t";
    cout<<endl;
    for(int i=1;i<=n;i++)
	{
		if(a[i]>m)
		{
			if(dir[a[i]]==0)
				dir[a[i]]=1;
			else
				dir[a[i]]=0;
		}
	}
}

int fact(int n)
{
    if(n==1)
     return 1;
    else
     return n*fact(n-1);
}

int main()
{
	int n;
	cout<<"Enter n value"<<endl;
	cin>>n;
	cout<<"Possible permutations of "<<n<<" are :"<<endl;
	int dir[n],a[n];
	for(int i=1;i<=n;i++)
	{
		dir[i]=0;
		a[i]=i;
		cout<<a[i]<<"\t";
	}
	cout<<"\n";
	for(int i=1;i<fact(n);i++)
		permut(a,dir,n);
	return 0;
}
